{"version":3,"file":"with-metadata-hash.mjs","sources":["../../src/with-metadata-hash.ts"],"sourcesContent":["import { merkleizeMetadata } from \"@polkadot-api/merkleize-metadata\"\nimport type { PolkadotSigner } from \"polkadot-api\"\nimport { mergeUint8 } from \"polkadot-api/utils\"\n\nconst EXTENSION_ID = \"CheckMetadataHash\"\n\nexport const withMetadataHash = (\n  signer: PolkadotSigner,\n  info: { decimals: number; tokenSymbol: string },\n  customMetadata?: Uint8Array,\n): PolkadotSigner => {\n  return {\n    ...signer,\n    signTx: async (callData, extensions, metadata, ...rest) => {\n      const merkleizer = merkleizeMetadata(customMetadata ?? metadata, info)\n\n      return signer.signTx(\n        callData,\n        {\n          ...extensions,\n          [EXTENSION_ID]: {\n            identifier: EXTENSION_ID,\n            value: Uint8Array.from([1]),\n            additionalSigned: mergeUint8([\n              Uint8Array.from([1]),\n              merkleizer.digest(),\n            ]),\n          },\n        },\n        metadata,\n        ...rest,\n      )\n    },\n  }\n}\n"],"names":[],"mappings":";;;AAIA,MAAM,YAAA,GAAe,mBAAA;AAEd,MAAM,gBAAA,GAAmB,CAC9B,MAAA,EACA,IAAA,EACA,cAAA,KACmB;AACnB,EAAA,OAAO;AAAA,IACL,GAAG,MAAA;AAAA,IACH,MAAA,EAAQ,OAAO,QAAA,EAAU,UAAA,EAAY,aAAa,IAAA,KAAS;AACzD,MAAA,MAAM,UAAA,GAAa,iBAAA,CAAkB,cAAA,IAAkB,QAAA,EAAU,IAAI,CAAA;AAErE,MAAA,OAAO,MAAA,CAAO,MAAA;AAAA,QACZ,QAAA;AAAA,QACA;AAAA,UACE,GAAG,UAAA;AAAA,UACH,CAAC,YAAY,GAAG;AAAA,YACd,UAAA,EAAY,YAAA;AAAA,YACZ,KAAA,EAAO,UAAA,CAAW,IAAA,CAAK,CAAC,CAAC,CAAC,CAAA;AAAA,YAC1B,kBAAkB,UAAA,CAAW;AAAA,cAC3B,UAAA,CAAW,IAAA,CAAK,CAAC,CAAC,CAAC,CAAA;AAAA,cACnB,WAAW,MAAA;AAAO,aACnB;AAAA;AACH,SACF;AAAA,QACA,QAAA;AAAA,QACA,GAAG;AAAA,OACL;AAAA,IACF;AAAA,GACF;AACF;;;;"}